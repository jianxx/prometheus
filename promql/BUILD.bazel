load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "promql",
    srcs = [
        "engine.go",
        "functions.go",
        "quantile.go",
        "query_logger.go",
        "test.go",
        "value.go",
    ],
    importpath = "github.com/prometheus/prometheus/promql",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/exemplar",
        "//pkg/labels",
        "//pkg/timestamp",
        "//pkg/value",
        "//promql/parser",
        "//storage",
        "//tsdb",
        "//tsdb/chunkenc",
        "//util/stats",
        "//util/teststorage",
        "//util/testutil",
        "@com_github_edsrzf_mmap_go//:mmap-go",
        "@com_github_go_kit_log//:log",
        "@com_github_go_kit_log//level",
        "@com_github_opentracing_opentracing_go//:opentracing-go",
        "@com_github_pkg_errors//:errors",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_common//model",
        "@com_github_uber_jaeger_client_go//:jaeger-client-go",
    ],
)

go_test(
    name = "promql_test",
    srcs = [
        "bench_test.go",
        "engine_test.go",
        "functions_test.go",
        "promql_test.go",
        "query_logger_test.go",
        "test_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":promql"],
    deps = [
        "//pkg/labels",
        "//pkg/timestamp",
        "//promql/parser",
        "//storage",
        "//util/teststorage",
        "@com_github_go_kit_log//:log",
        "@com_github_stretchr_testify//require",
        "@org_uber_go_goleak//:goleak",
    ],
)

alias(
    name = "go_default_library",
    actual = ":promql",
    visibility = ["//visibility:public"],
)
